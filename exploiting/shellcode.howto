Do something like this in a /tmp directory of your choice (you'll have to create it first and make sure it's not guessable).

$ mkdir /tmp/unguessable_dir_name
$ cd /tmp/unguessable_dir_name

Find the syscall number you're looking for (_exit in this example):
$ grep __NR_exit /usr/include/asm/unistd_32.h
5:#define __NR_exit 1

And start coding:
$ vim exit.asm
...
$ cat exit.asm

section .text
global _start

_start:
    mov eax, 1      ; eax == syscall number
    xor ebx, ebx    ; ebx == first param
    int 0x80        ; trigger interrupt nr 0x80 (syscall)

$ nasm -f elf32 exit.asm
$ ld -m elf_i386 -o exit exit.o

Test it with:
$ strace ./exit

Extract shellcode with:
$ for i in $(objdump -d ./exit |grep "^ " |cut -f2); do echo -n '\x'$i; done; echo
\xb8\x01\x00\x00\x00\x31\xdb\xcd\x80

And use it like (keep in mind that is has to be null-free, unlinke this one):
$ ~/write_your_own/write_your_own $(prython2 -c 'print "\xb8\x01..."')

